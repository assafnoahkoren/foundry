name: CI

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:

jobs:
  server-checks:
    name: Server - Type Check, Lint & Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: foundry_user
          POSTGRES_PASSWORD: foundry_password
          POSTGRES_DB: foundry
        ports:
          - 13001:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      mailhog:
        image: mailhog/mailhog:latest
        ports:
          - 13004:1025  # SMTP port
          - 13005:8025  # Web UI port
        options: >-
          --health-cmd "echo 'EHLO mailhog' | nc localhost 1025"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 13007:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cp .env.example .env || echo "No .env.example found, using defaults"
          # Update mail configuration for CI
          echo "MAIL_HOST=localhost" >> .env
          echo "MAIL_PORT=13004" >> .env
          
      - name: Generate Prisma Client
        working-directory: ./server
        run: npm run prisma:generate

      - name: Run TypeScript check
        working-directory: ./server
        run: npm run typecheck

      - name: Run ESLint
        working-directory: ./server
        run: npm run lint

      - name: Run database migrations
        working-directory: ./server
        run: npm run prisma:push
        env:
          DATABASE_URL: postgresql://foundry_user:foundry_password@localhost:13001/foundry

      - name: Run tests
        working-directory: ./server
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://foundry_user:foundry_password@localhost:13001/foundry
          JWT_SECRET: test-secret-key
          JWT_EXPIRATION: 1h
          MAIL_HOST: localhost
          MAIL_PORT: 13004
          MAIL_FROM_EMAIL: test@foundry.local
          MAIL_FROM_NAME: Foundry Test
          REDIS_HOST: localhost
          REDIS_PORT: 13007
          REDIS_PASSWORD: ''

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: server-coverage
          path: server/coverage/
          retention-days: 7

  webapp-checks:
    name: WebApp - Type Check, Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        working-directory: ./server
        run: npm run prisma:generate

      - name: Run TypeScript check
        working-directory: ./webapp
        run: npm run typecheck

      - name: Run ESLint
        working-directory: ./webapp
        run: npm run lint

      - name: Build webapp
        working-directory: ./webapp
        run: npm run build

  all-checks:
    name: All Checks Passed
    needs: [server-checks, webapp-checks]
    runs-on: ubuntu-latest
    steps:
      - name: All checks completed
        run: echo "âœ… All CI checks passed successfully!"